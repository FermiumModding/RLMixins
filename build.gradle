plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version "${forge_gradle_version}"
    id 'org.spongepowered.mixin' version "${mixin_gradle_version}"
}

version = mod_version
group = mod_id
base.archivesName = mod_name

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: mappings_channel, version: mappings_version
}

repositories {
    flatDir { dirs 'libs' }
    maven { url = 'https://www.cursemaven.com' }
}

dependencies {
    //Forge
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    //Mixin
    implementation "org.spongepowered:mixin:${mixin_version}"
    annotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"
    implementation "io.github.llamalad7:mixinextras-common:${mixin_extras_version}"
    annotationProcessor "io.github.llamalad7:mixinextras-common:${mixin_extras_version}"

    //FermiumBooter
    implementation fg.deobf("curse.maven:fermiumbooter-${fermiumbooter_version}")

	//FlatDir Mods
    implementation fg.deobf("libs:SRParasites:${srparasites_version}") //Third party distro disabled

    //CurseMaven Mods
    implementation fg.deobf("curse.maven:baubles-${baubles_version}")
    implementation fg.deobf("curse.maven:betterfoliage-${betterfoliage_version}")
    implementation fg.deobf("curse.maven:betterquesting-${betterquesting_version}")
    implementation fg.deobf("curse.maven:bettersurvival-${bettersurvival_version}")
    implementation fg.deobf("curse.maven:callablehorses-${callablehorses_version}")
    implementation fg.deobf("curse.maven:champions-${champions_version}")
    implementation fg.deobf("curse.maven:charm-${charm_version}")
    implementation fg.deobf("curse.maven:chunkanimator-${chunkanimator_version}")
    implementation fg.deobf("curse.maven:defiledlands-${defiledlands_version}")
    implementation fg.deobf("curse.maven:distinctdamagedescriptions-${distinctdamagedescriptions_version}")
    implementation fg.deobf("curse.maven:epicsiegemod-${epicsiegemod_version}")
    implementation fg.deobf("curse.maven:infernalmobs-${infernalmobs_version}")
    implementation fg.deobf("curse.maven:infrlcraft-${infrlcraft_version}")
    implementation fg.deobf("curse.maven:inspirations-${inspirations_version}")
    implementation fg.deobf("curse.maven:jei-${jei_version}")
    implementation fg.deobf("curse.maven:lycanitesmobs-${lycanitesmobs_version}")
    implementation fg.deobf("curse.maven:mmmmmmmmmmmm-${testdummy_version}")
    implementation fg.deobf("curse.maven:mobends-${mobends_version}")
    implementation fg.deobf("curse.maven:potioncore-${potioncore_version}")
    implementation fg.deobf("curse.maven:quark-${quark_version}")
    implementation fg.deobf("curse.maven:rlartifacts-${rlartifacts_version}")
    implementation fg.deobf("curse.maven:rlcombat-${rlcombat_version}")
    implementation fg.deobf("curse.maven:rustic-${rustic_version}")
    implementation fg.deobf("curse.maven:scalinghealth-${scalinghealth_version}")
    implementation fg.deobf("curse.maven:somanyenchantments-${somanyenchantments_version}")
    implementation fg.deobf("curse.maven:spartanweaponry-${spartanweaponry_version}")

    //CurseMaven Libs
    implementation fg.deobf("curse.maven:autoreglib-${autoreglib_version}")
    implementation fg.deobf("curse.maven:llibrary-${llibrary_version}")
}

mixin {
    add sourceSets.main, "mixins.${mod_id}.refmap.json"
}

processResources {
    var replaceProperties = [
            'mod_id': mod_id,
            'mod_name': mod_name,
            'version': mod_version,
            'mcversion': minecraft_version,
            'mod_description': mod_description,
            'mod_author': mod_author
    ]

    inputs.properties replaceProperties

    filesMatching('mcmod.info') {
        expand replaceProperties
    }
}

jar {
    manifest {
        attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_author,
                'Specification-Version'   : '1',
                'Implementation-Title'    : mod_name,
                'Implementation-Vendor'   : mod_author,
                'Implementation-Version'  : mod_version,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'FMLCorePlugin': mixin_loader_class,
                'FMLCorePluginContainsFMLMod': 'true',
                'ForceLoadAsMod': 'true', //Comment out in dev environment, uncomment for building
                'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker'
        ])
    }
}

jar.finalizedBy('reobfJar')